// 1. Create a collection named orders.
db.orders.insert({})
or
db.createCollection('orders')
// 2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
db.orders.insert({
orderDate: new Date("1966-09-19"),
orderTotal: "50.00",
lineItems:[{unitPrice:"1.00",quantity:5,productName:'honey'}]
})
db.orders.insert({
orderDate: new Date("1996-02-29"),
orderTotal: "40.00",
lineItems:[{unitPrice:"2.00",quantity:15,productName:'milk'}]
})
db.orders.insert({
orderDate: new Date("1988-04-10"),
orderTotal: "30.00",
lineItems:[{unitPrice:"3.00",quantity:25,productName:'crackers'}]
})
// 3. Find a single order document, any order document.
db.orders.find({orderTotal:"40.00"})
// 4. Find all orders and make them look pretty.
db.orders.find({}).pretty()
// 5. Find all orders with an orderDate that is prior to 1/1/2016.
db.orders.find({orderDate:{$lt:ISODate("2016-01-01T00:00:00.000Z") } } )
// 6. Find all orders with an orderDate that is after 1/1/2016.
db.orders.find({orderDate:{$gt:ISODate("2016-01-01T00:00:00.000Z") } } )
// 7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.
db.orders.find({$and:[{"lineItems.quantity":{$lt:50}},{"lineItems.quantity":{$gt:5}}]})
// 8. Update one of your line items to 42.99. HINT: Look at dot notation
db.orders.update({orderTotal:"40.00"},{$set:{lineItems:[{unitPrice:"42.99",quantity:15,productName:"milk"}]}})
// 9. Remove one of your orders.
db.orders.remove({orderTotal:"40.00"})
